let iconMenu = document.querySelector(".icon-menu"); if (null != iconMenu) { let e = document.querySelector(".menu__body"); iconMenu.addEventListener("click", function (t) { iconMenu.classList.toggle("_active"), e.classList.toggle("_active") }) } function menu_close() { let e = document.querySelector(".icon-menu"), t = document.querySelector(".menu__body"); e.classList.remove("_active"), t.classList.remove("_active") } const menuParents = document.querySelectorAll(".menu-page__parent"); for (let e = 0; e < menuParents.length; e++) { const t = menuParents[e]; t.addEventListener("mouseenter", function (e) { t.classList.add("_active") }), t.addEventListener("mouseleave", function (e) { t.classList.remove("_active") }); let l = document.querySelector(".menu-page__burger"); l.addEventListener("click", function (e) { l.classList.toggle("_active") }) } let _slideUp = (e, t = 500) => { e.style.transitionProperty = "height, margin, padding", e.style.transitionDuration = t + "ms", e.style.height = e.offsetHeight + "px", e.offsetHeight, e.style.overflow = "hidden", e.style.height = 0, e.style.paddingTop = 0, e.style.paddingBottom = 0, e.style.marginTop = 0, e.style.marginBottom = 0, window.setTimeout(() => { e.style.display = "none", e.style.removeProperty("height"), e.style.removeProperty("padding-top"), e.style.removeProperty("padding-bottom"), e.style.removeProperty("margin-top"), e.style.removeProperty("margin-bottom"), e.style.removeProperty("overflow"), e.style.removeProperty("transition-duration"), e.style.removeProperty("transition-property"), e.classList.remove("_slide") }, t) }, _slideDown = (e, t = 500) => { e.style.removeProperty("display"); let l = window.getComputedStyle(e).display; "none" === l && (l = "block"), e.style.display = l; let r = e.offsetHeight; e.style.overflow = "hidden", e.style.height = 0, e.style.paddingTop = 0, e.style.paddingBottom = 0, e.style.marginTop = 0, e.style.marginBottom = 0, e.offsetHeight, e.style.transitionProperty = "height, margin, padding", e.style.transitionDuration = t + "ms", e.style.height = r + "px", e.style.removeProperty("padding-top"), e.style.removeProperty("padding-bottom"), e.style.removeProperty("margin-top"), e.style.removeProperty("margin-bottom"), window.setTimeout(() => { e.style.removeProperty("height"), e.style.removeProperty("overflow"), e.style.removeProperty("transition-duration"), e.style.removeProperty("transition-property"), e.classList.remove("_slide") }, t) }, _slideToggle = (e, t = 500) => { if (!e.classList.contains("_slide")) return e.classList.add("_slide"), "none" === window.getComputedStyle(e).display ? _slideDown(e, t) : _slideUp(e, t) }, menuPageBurger = document.querySelector(".menu-page__burger"), menuPageBody = document.querySelector(".menu-page__body"); menuPageBurger.addEventListener("click", function (e) { menuPageBurger.classList.toggle("_active"), _slideToggle(menuPageBody) }); let searchSelect = document.querySelector(".search-page__title"), categoriesSearch = document.querySelector(".categories-search"); searchSelect.addEventListener("click", function (e) { searchSelect.classList.toggle("_active"), _slideToggle(categoriesSearch) }); let checkboxCategories = document.querySelectorAll(".categories-search__checkbox"); for (let e = 0; e < checkboxCategories.length; e++) { const t = checkboxCategories[e]; t.addEventListener("change", function (e) { t.classList.toggle("_active"); let l = document.querySelectorAll(".categories-search__checkbox._active"); if (l.length > 0) { searchSelect.classList.add("_categories"); let e = searchSelect.querySelector(".search-page__quantity"); e.innerHTML = e.getAttribute("data-text") + " " + l.length } else searchSelect.classList.remove("_categories") }) } let sliders = document.querySelectorAll("._swiper"); if (sliders) { for (let e = 0; e < sliders.length; e++) { let t = sliders[e]; if (!t.classList.contains("swiper-bild")) { let e = t.children; if (e) for (let t = 0; t < e.length; t++) { e[t].classList.add("swiper-slide") } let l = t.innerHTML, r = document.createElement("div"); r.classList.add("swiper-wrapper"), r.innerHTML = l, t.innerHTML = "", t.appendChild(r), t.classList.add("swiper-bild") } t.classList.contains("_gallery") } sliders_bild_callback() } function sliders_bild_callback(e) { } if (document.querySelector(".mainslider")) { new Swiper(".mainslider__body", { observer: !0, observeParents: !0, slidesPerView: 1, spaceBetween: 0, autoHeight: !0, speed: 800, pagination: { el: ".mainslider__dotts", clickable: !0 }, on: { lazyImageReady: function () { ibg() } } }); let e = document.querySelectorAll(".mainslider__image"), t = document.querySelectorAll(".mainslider__dotts .swiper-pagination-bullet"); for (let l = 0; l < e.length; l++) { const r = e[l].querySelector("img").getAttribute("src"); t[l].style.backgroundImage = "url('" + r + "')" } } if (document.querySelector(".products-slider")) { new Swiper(".products-slider__item", { observer: !0, observeParents: !0, slidesPerView: 1, spaceBetween: 0, autoHeight: !0, speed: 800, pagination: { el: ".products-slider__info", type: "fraction" }, navigation: { nextEl: ".products-slider__arrow_next", prevEl: ".products-slider__arrow_prev" }, on: { lazyImageReady: function () { ibg() } } }) } if (document.querySelector(".brands-slider")) { new Swiper(".brands-slider__body", { observer: !0, observeParents: !0, slidesPerView: 5, spaceBetween: 0, speed: 800, loop: !0, navigation: { nextEl: ".brands-slider__arrow_next", prevEl: ".brands-slider__arrow_prev" }, breakpoints: { 320: { slidesPerView: 1, autoHeight: !0 }, 480: { slidesPerView: 2 }, 600: { slidesPerView: 3 }, 768: { slidesPerView: 4 }, 992: { slidesPerView: 5 } } }) } const priceSlider = document.querySelector(".price-filter__slider"); if (priceSlider) { noUiSlider.create(priceSlider, { start: [0, 2e5], connect: !0, tooltips: [wNumb({ decimals: 0 }), wNumb({ decimals: 0 })], range: { min: [0], max: [2e4] } }); const e = document.getElementById("price-start"), t = document.getElementById("price-end"); function setPriceValues() { let l, r; "" != e.value && (l = e.value), "" != t.value && (r = t.value), priceSlider.noUiSlider.set([l, r]) } e.addEventListener("change", setPriceValues), t.addEventListener("change", setPriceValues) } const filterTitle = document.querySelector(".filter__title"); filterTitle && filterTitle.addEventListener("click", function (e) { filterTitle.classList.toggle("_active"), _slideToggle(filterTitle.nextElementSibling) }); let spollers = document.querySelectorAll("._spoller"); if (spollers.length > 0) for (let e = 0; e < spollers.length; e++) { const t = spollers[e]; t.addEventListener("click", function (e) { if (t.classList.contains("_spoller-992") && window.innerWidth > 992) return !1; if (t.classList.contains("_spoller-768") && window.innerWidth > 768) return !1; if (t.closest("._spollers").classList.contains("_one")) { let e = t.closest("._spollers").querySelectorAll("._spoller"); for (let l = 0; l < e.length; l++) { let r = e[l]; r != t && (r.classList.remove("_active"), _slideUp(r.nextElementSibling)) } } t.classList.toggle("_active"), _slideToggle(t.nextElementSibling) }) } let selects = document.getElementsByTagName("select"); function selects_init() { for (let e = 0; e < selects.length; e++) { select_init(selects[e]) } document.addEventListener("click", function (e) { selects_close(e) }), document.addEventListener("keydown", function (e) { 27 == e && selects_close(e) }) } function selects_close(e) { const t = document.querySelectorAll(".select"); if (!e.target.closest(".select")) for (let e = 0; e < t.length; e++) { const l = t[e], r = l.querySelector(".select__options"); l.classList.remove("_active"), _slideUp(r, 100) } } function select_init(e) { const t = e.parentElement, l = e.getAttribute("class"), r = e.querySelector("option:checked"); e.setAttribute("data-default", r.value), e.style.display = "none", t.insertAdjacentHTML("beforeend", '<div class="select select_' + l + '"></div>'), e.parentElement.querySelector(".select").appendChild(e), select_item(e) } function select_item(e) { const t = e.parentElement, l = t.querySelector(".select__item"), r = e.querySelectorAll("option"), s = e.querySelector("option:checked").text, i = e.getAttribute("data-type"); l && l.remove(); let o = ""; o = "input" == i ? '<div class="select__value icon-select-arrow"><input autocomplete="off" type="text" name="form[]" value="' + s + '" data-error="Помилка" data-value="' + s + '" class="select__input"></div>' : '<div class="select__value icon-select-arrow"><span>' + s + "</span></div>", t.insertAdjacentHTML("beforeend", '<div class="select__item"><div class="select__title">' + o + '</div><div class="select__options">' + select_get_options(r) + "</div></div></div>"), select_actions(e, t) } function select_actions(e, t) { const l = t.querySelector(".select__item"), r = t.querySelector(".select__options"), s = t.querySelectorAll(".select__option"), i = e.getAttribute("data-type"), o = t.querySelector(".select__input"); l.addEventListener("click", function () { let e = document.querySelectorAll(".select"); for (let t = 0; t < e.length; t++) { const r = e[t], s = r.querySelector(".select__options"); r != l.closest(".select") && (r.classList.remove("_active"), _slideUp(s, 100)) } _slideToggle(r, 100), t.classList.toggle("_active") }); for (let l = 0; l < s.length; l++) { const r = s[l], n = r.getAttribute("data-value"), c = r.innerHTML; "input" == i ? o.addEventListener("keyup", select_search) : r.getAttribute("data-value") == e.value && (r.style.display = "none"), r.addEventListener("click", function () { for (let e = 0; e < s.length; e++) { s[e].style.display = "block" } "input" == i ? (o.value = c, e.value = n) : (t.querySelector(".select__value").innerHTML = "<span>" + c + "</span>", e.value = n, r.style.display = "none") }) } } function select_get_options(e) { if (e) { let t = ""; for (let l = 0; l < e.length; l++) { const r = e[l], s = r.value; if ("" != s) { t = t + '<div data-value="' + s + '" class="select__option">' + r.text + "</div>" } } return t } } function select_search(e) { e.target.closest(".select ").querySelector(".select__options"); let t = e.target.closest(".select ").querySelectorAll(".select__option"), l = e.target.value.toUpperCase(); for (let e = 0; e < t.length; e++) { let r = t[e]; (r.textContent || r.innerText).toUpperCase().indexOf(l) > -1 ? r.style.display = "" : r.style.display = "none" } } function selects_update_all() { let e = document.querySelectorAll("select"); if (e) for (let t = 0; t < e.length; t++) { select_item(e[t]) } } if (selects.length > 0 && selects_init(), document.querySelector(".images-product")) { let e = new Swiper(".images-product__subslider", { observer: !0, observeParents: !0, slidesPerView: 4, spaceBetween: 0, speed: 800 }); new Swiper(".images-product__mainslider", { observer: !0, observeParents: !0, slidesPerView: 1, spaceBetween: 0, thumbs: { swiper: e }, speed: 800 }) } let quantityButtons = document.querySelectorAll(".quantity__button"); if (quantityButtons.length > 0) for (let e = 0; e < quantityButtons.length; e++) { const t = quantityButtons[e]; t.addEventListener("click", function (e) { let l = parseInt(t.closest(".quantity").querySelector("input").value); t.classList.contains("quantity__button_plus") ? l++ : (l -= 1) < 1 && (l = 1), t.closest(".quantity").querySelector("input").value = l }) } let tabs = document.querySelectorAll("._tabs"); for (let e = 0; e < tabs.length; e++) { let t = tabs[e], l = t.querySelectorAll("._tabs-item"), r = t.querySelectorAll("._tabs-block"); for (let e = 0; e < l.length; e++) { let t = l[e]; t.addEventListener("click", function (s) { for (let e = 0; e < l.length; e++) { l[e].classList.remove("_active"), r[e].classList.remove("_active") } t.classList.add("_active"), r[e].classList.add("_active"), s.preventDefault() }) } } function _is_hidden(e) { return null === e.offsetParent } let forms = document.querySelectorAll("form"); if (forms.length > 0) for (let e = 0; e < forms.length; e++) { forms[e].addEventListener("submit", form_submit) } function form_submit(e) { let t = e.target.closest("form"), l = t.getAttribute("data-message"); if (0 == form_validate(t)) form_clean(t), l && (popup_open("message-" + l), e.preventDefault()); else { let l = t.querySelectorAll("._error"); l && t.classList.contains("_goto-error") && _goto(l[0], 1e3, 50), e.preventDefault() } } function form_validate(e) { let t = 0, l = e.querySelectorAll("._req"); if (l.length > 0) for (let e = 0; e < l.length; e++) { const r = l[e]; _is_hidden(r) || (t += form_validate_input(r)) } return t } function form_validate_input(e) { let t = 0, l = e.getAttribute("data-value"); if ("email" == e.getAttribute("name") || e.classList.contains("_email")) { if (e.value != l) { let t = e.value.replace(" ", ""); e.value = t } email_test(e) || e.value == l ? (form_add_error(e), t++) : form_remove_error(e) } else "checkbox" == e.getAttribute("type") && 0 == e.checked ? (form_add_error(e), t++) : "" == e.value || e.value == l ? (form_add_error(e), t++) : form_remove_error(e); return t } function form_add_error(e) { e.classList.add("_error"), e.parentElement.classList.add("_error"); let t = e.parentElement.querySelector(".form__error"); t && e.parentElement.removeChild(t); let l = e.getAttribute("data-error"); l && "" != l && e.parentElement.insertAdjacentHTML("beforeend", '<div class="form__error">' + l + "</div>") } function form_remove_error(e) { e.classList.remove("_error"), e.parentElement.classList.remove("_error"); let t = e.parentElement.querySelector(".form__error"); t && e.parentElement.removeChild(t) }